[[package]]
name = "aiobotocore"
version = "2.3.4"
description = "Async client for aws services using botocore and aiohttp"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiohttp = ">=3.3.1"
aioitertools = ">=0.5.1"
botocore = ">=1.24.21,<1.24.22"
wrapt = ">=1.10.10"

[package.extras]
awscli = ["awscli (>=1.22.76,<1.22.77)"]
boto3 = ["boto3 (>=1.21.21,<1.21.22)"]

[[package]]
name = "aiohttp"
version = "3.8.1"
description = "Async http client/server framework (asyncio)"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["aiodns", "brotli", "cchardet"]

[[package]]
name = "aioitertools"
version = "0.10.0"
description = "itertools and builtins for AsyncIO and mixed iterables"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing_extensions = {version = ">=4.0", markers = "python_version < \"3.10\""}

[[package]]
name = "aiosignal"
version = "1.2.0"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "aiosqlite"
version = "0.17.0"
description = "asyncio bridge to the standard sqlite3 module"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing_extensions = ">=3.7.2"

[[package]]
name = "alembic"
version = "1.8.1"
description = "A database migration tool for SQLAlchemy."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.9\""}
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}
Mako = "*"
SQLAlchemy = ">=1.3.0"

[package.extras]
tz = ["python-dateutil"]

[[package]]
name = "anndata"
version = "0.8.0"
description = "Annotated data."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
h5py = ">=3"
natsort = "*"
numpy = ">=1.16.5"
packaging = ">=20"
pandas = ">=1.1.1"
scipy = ">1.4"

[package.extras]
test = ["dask", "scanpy", "boltons", "joblib", "openpyxl", "sklearn", "matplotlib", "zarr", "pytest-cov (>=2.10)", "pytest (>=6.0)", "loompy (>=3.0.5)"]
doc = ["zarr", "typing-extensions", "scanpydoc (>=0.7.3)", "nbsphinx", "sphinx-issues", "sphinx-autodoc-typehints (>=1.11.0)", "sphinx-rtd-theme", "sphinx (>=4.1,<4.2)"]
dev = ["docutils", "black (>=20.8b1)", "setuptools-scm"]

[[package]]
name = "anyio"
version = "3.6.1"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"

[package.extras]
doc = ["packaging", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["coverage[toml] (>=4.5)", "hypothesis (>=4.0)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "contextlib2", "uvloop (<0.15)", "mock (>=4)", "uvloop (>=0.15)"]
trio = ["trio (>=0.16)"]

[[package]]
name = "asciitree"
version = "0.3.3"
description = "Draws ASCII trees."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "asgi-lifespan"
version = "1.0.1"
description = "Programmatic startup/shutdown of ASGI apps."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
sniffio = "*"

[[package]]
name = "asttokens"
version = "2.0.5"
description = "Annotate AST trees with source code positions"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
test = ["astroid", "pytest"]

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "asyncclick"
version = "8.1.3.2"
description = "Composable command line interface toolkit, async version"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "21.4.0"
description = "Classes Without Boilerplate"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope-interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit", "cloudpickle"]
docs = ["furo", "sphinx", "zope-interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope-interface", "cloudpickle"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "cloudpickle"]

[[package]]
name = "bcrypt"
version = "3.2.2"
description = "Modern password hashing for your software and your servers"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.1"

[package.extras]
tests = ["pytest (>=3.2.1,!=3.3.0)"]
typecheck = ["mypy"]

[[package]]
name = "botocore"
version = "1.24.21"
description = "Low-level, data-driven core of boto 3."
category = "dev"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.13.5)"]

[[package]]
name = "bumpver"
version = "2022.1118"
description = "Bump version numbers in project files."
category = "dev"
optional = false
python-versions = ">=2.7"

[package.dependencies]
click = {version = "*", markers = "python_version >= \"3.6\""}
colorama = ">=0.4"
lexid = "*"
pathlib2 = "*"
setuptools = {version = ">=45.0.0", markers = "python_version >= \"3.5\""}
toml = "*"

[[package]]
name = "cellpose"
version = "2.0"
description = "anatomical segmentation algorithm"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
fastremap = "*"
natsort = "*"
numba = "*"
numpy = ">=1.20.0"
opencv-python-headless = "*"
scipy = "*"
tifffile = "*"
torch = ">=1.6"
tqdm = "*"

[package.extras]
all = ["pyqtgraph (>=0.11.0rc0)", "pyqt5", "pyqt5-sip", "google-cloud-storage", "dask", "dask-image", "scikit-learn"]
distributed = ["dask", "dask-image", "scikit-learn"]
docs = ["sphinx (>=3.0)", "sphinxcontrib-apidoc", "sphinx-rtd-theme"]
gui = ["pyqtgraph (>=0.11.0rc0)", "pyqt5", "pyqt5-sip", "google-cloud-storage"]

[[package]]
name = "certifi"
version = "2022.6.15"
description = "Python package for providing Mozilla's CA Bundle."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "cfgv"
version = "3.3.1"
description = "Validate configuration and produce human readable error messages."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "charset-normalizer"
version = "2.1.0"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "dev"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "click"
version = "8.1.3"
description = "Composable command line interface toolkit"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "cloudpickle"
version = "2.1.0"
description = "Extended pickling support for Python objects"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "colorama"
version = "0.4.5"
description = "Cross-platform colored terminal text."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "commonmark"
version = "0.9.1"
description = "Python parser for the CommonMark Markdown spec"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["hypothesis (==3.55.3)", "flake8 (==3.7.8)"]

[[package]]
name = "coverage"
version = "6.4.2"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
toml = ["tomli"]

[[package]]
name = "cryptography"
version = "37.0.4"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
sdist = ["setuptools_rust (>=0.11.4)"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-subtests", "pytest-xdist", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]

[[package]]
name = "dask"
version = "2022.7.0"
description = "Parallel PyData with Task Scheduling"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
cloudpickle = ">=1.1.1"
fsspec = ">=0.6.0"
packaging = ">=20.0"
partd = ">=0.3.10"
pyyaml = ">=5.3.1"
toolz = ">=0.8.2"

[package.extras]
array = ["numpy (>=1.18)"]
complete = ["bokeh (>=2.4.2)", "distributed (==2022.7.0)", "jinja2", "numpy (>=1.18)", "pandas (>=1.0)"]
dataframe = ["numpy (>=1.18)", "pandas (>=1.0)"]
diagnostics = ["bokeh (>=2.4.2)", "jinja2"]
distributed = ["distributed (==2022.7.0)"]
test = ["pytest", "pytest-rerunfailures", "pytest-xdist", "pre-commit"]

[[package]]
name = "defusedxml"
version = "0.7.1"
description = "XML bomb protection for Python stdlib modules"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "devtools"
version = "0.8.0"
description = "Python's missing debug print command and other development tools."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
asttokens = ">=2.0.0,<3.0.0"
executing = ">=0.8.0,<1.0.0"

[package.extras]
pygments = ["Pygments (>=2.2.0)"]

[[package]]
name = "dill"
version = "0.3.5.1"
description = "serialize all of python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "distlib"
version = "0.3.4"
description = "Distribution utilities"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "dnspython"
version = "2.2.1"
description = "DNS toolkit"
category = "dev"
optional = false
python-versions = ">=3.6,<4.0"

[package.extras]
dnssec = ["cryptography (>=2.6,<37.0)"]
curio = ["curio (>=1.2,<2.0)", "sniffio (>=1.1,<2.0)"]
doh = ["h2 (>=4.1.0)", "httpx (>=0.21.1)", "requests (>=2.23.0,<3.0.0)", "requests-toolbelt (>=0.9.1,<0.10.0)"]
idna = ["idna (>=2.1,<4.0)"]
trio = ["trio (>=0.14,<0.20)"]
wmi = ["wmi (>=1.5.1,<2.0.0)"]

[[package]]
name = "docutils"
version = "0.19"
description = "Docutils -- Python Documentation Utilities"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "email-validator"
version = "1.2.1"
description = "A robust email syntax and deliverability validation library."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
dnspython = ">=1.15.0"
idna = ">=2.0.0"

[[package]]
name = "executing"
version = "0.8.3"
description = "Get the currently executing AST node of a frame, and other information"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "fastapi"
version = "0.78.0"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
pydantic = ">=1.6.2,<1.7 || >1.7,<1.7.1 || >1.7.1,<1.7.2 || >1.7.2,<1.7.3 || >1.7.3,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0"
starlette = "0.19.1"

[package.extras]
all = ["requests (>=2.24.0,<3.0.0)", "jinja2 (>=2.11.2,<4.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "itsdangerous (>=1.1.0,<3.0.0)", "pyyaml (>=5.3.1,<7.0.0)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)", "orjson (>=3.2.1,<4.0.0)", "email_validator (>=1.1.1,<2.0.0)", "uvicorn[standard] (>=0.12.0,<0.18.0)"]
dev = ["python-jose[cryptography] (>=3.3.0,<4.0.0)", "passlib[bcrypt] (>=1.7.2,<2.0.0)", "autoflake (>=1.4.0,<2.0.0)", "flake8 (>=3.8.3,<4.0.0)", "uvicorn[standard] (>=0.12.0,<0.18.0)", "pre-commit (>=2.17.0,<3.0.0)"]
doc = ["mkdocs (>=1.1.2,<2.0.0)", "mkdocs-material (>=8.1.4,<9.0.0)", "mdx-include (>=1.4.1,<2.0.0)", "mkdocs-markdownextradata-plugin (>=0.1.7,<0.3.0)", "typer (>=0.4.1,<0.5.0)", "pyyaml (>=5.3.1,<7.0.0)"]
test = ["pytest (>=6.2.4,<7.0.0)", "pytest-cov (>=2.12.0,<4.0.0)", "mypy (==0.910)", "flake8 (>=3.8.3,<4.0.0)", "black (==22.3.0)", "isort (>=5.0.6,<6.0.0)", "requests (>=2.24.0,<3.0.0)", "httpx (>=0.14.0,<0.19.0)", "email_validator (>=1.1.1,<2.0.0)", "sqlalchemy (>=1.3.18,<1.5.0)", "peewee (>=3.13.3,<4.0.0)", "databases[sqlite] (>=0.3.2,<0.6.0)", "orjson (>=3.2.1,<4.0.0)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "flask (>=1.1.2,<3.0.0)", "anyio[trio] (>=3.2.1,<4.0.0)", "types-ujson (==4.2.1)", "types-orjson (==3.6.2)", "types-dataclasses (==0.6.5)"]

[[package]]
name = "fastapi-users"
version = "10.1.1"
description = "Ready-to-use and customizable users management for FastAPI"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
email-validator = ">=1.1.0,<1.3"
fastapi = ">=0.65.2"
httpx-oauth = {version = ">=0.4,<=0.7", optional = true, markers = "extra == \"oauth\""}
makefun = ">=1.11.2,<1.14"
passlib = {version = "1.7.4", extras = ["bcrypt"]}
pyjwt = {version = "2.4.0", extras = ["crypto"]}
python-multipart = "0.0.5"

[package.extras]
beanie = ["fastapi-users-db-beanie (>=1.0.0)"]
dev = ["flake8", "pytest", "requests", "isort", "pytest-asyncio", "flake8-docstrings", "mike", "mkdocs", "mkdocs-material", "mkdocs-mermaid2-plugin", "black", "mypy", "codecov", "pytest-cov", "pytest-mock", "flit", "markdown-include", "pygments", "pymdown-extensions", "bumpversion", "httpx-oauth", "httpx", "asgi-lifespan", "uvicorn", "types-redis"]
oauth = ["httpx-oauth (>=0.4,<=0.7)"]
redis = ["redis (>=4.3.3,<5.0.0)"]
sqlalchemy = ["fastapi-users-db-sqlalchemy (>=4.0.0)"]

[[package]]
name = "fastapi-users-db-sqlmodel"
version = "0.2.0"
description = "FastAPI Users database adapter for SQLModel."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
fastapi-users = ">=10.0.2"
sqlalchemy = {version = ">=1.4,<1.4.36", extras = ["asyncio"]}
sqlmodel = "*"

[[package]]
name = "fasteners"
version = "0.17.3"
description = "A python package that provides useful locks"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "fastremap"
version = "1.13.2"
description = "Remap, mask, renumber, unique, and in-place transposition of 3D labeled images. Point cloud too."
category = "dev"
optional = false
python-versions = "~=3.6"

[package.dependencies]
numpy = "*"

[[package]]
name = "filelock"
version = "3.7.1"
description = "A platform independent file lock."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2021.8.17b43)", "sphinx (>=4.1)", "sphinx-autodoc-typehints (>=1.12)"]
testing = ["covdefaults (>=1.2.0)", "coverage (>=4)", "pytest (>=4)", "pytest-cov", "pytest-timeout (>=1.4.2)"]

[[package]]
name = "flask"
version = "2.1.3"
description = "A simple framework for building complex web applications."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=8.0"
importlib-metadata = {version = ">=3.6.0", markers = "python_version < \"3.10\""}
itsdangerous = ">=2.0"
Jinja2 = ">=3.0"
Werkzeug = ">=2.0"

[package.extras]
async = ["asgiref (>=3.2)"]
dotenv = ["python-dotenv"]

[[package]]
name = "flask-sqlalchemy"
version = "2.5.1"
description = "Adds SQLAlchemy support to your Flask application."
category = "dev"
optional = false
python-versions = ">= 2.7, != 3.0.*, != 3.1.*, != 3.2.*, != 3.3.*"

[package.dependencies]
Flask = ">=0.10"
SQLAlchemy = ">=0.8.0"

[[package]]
name = "frozenlist"
version = "1.3.0"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "fsspec"
version = "2022.5.0"
description = "File-system specification"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
s3fs = {version = "*", optional = true, markers = "extra == \"s3\""}

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
dropbox = ["dropboxdrivefs", "requests", "dropbox"]
entrypoints = ["importlib-metadata"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["requests", "aiohttp"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
tqdm = ["tqdm"]

[[package]]
name = "globus-sdk"
version = "3.10.1"
description = "Globus SDK for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cryptography = ">=3.3.1,<3.4.0 || >3.4.0"
pyjwt = {version = ">=2.0.0,<3.0.0", extras = ["crypto"]}
requests = ">=2.19.1,<3.0.0"
typing-extensions = {version = ">=4.0", markers = "python_version < \"3.10\""}

[package.extras]
dev = ["pytest (<7)", "coverage (<7)", "pytest-xdist (<3)", "flake8 (<5)", "isort (<6)", "black (==21.12b0)", "flake8-bugbear (==21.11.29)", "mypy (==0.960)", "types-docutils", "types-jwt", "types-requests", "typing-extensions", "sphinx (<5)", "sphinx-issues (<3)", "furo (==2022.1.2)", "responses (==0.17.0)", "responses (==0.21.0)"]

[[package]]
name = "graphviz"
version = "0.20"
description = "Simple Python interface for Graphviz"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["tox (>=3)", "flake8", "pep8-naming", "wheel", "twine"]
docs = ["sphinx (>=4)", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]
test = ["pytest (>=7)", "pytest-mock (>=3)", "mock (>=4)", "pytest-cov", "coverage"]

[[package]]
name = "greenlet"
version = "1.1.2"
description = "Lightweight in-process concurrent programming"
category = "dev"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"

[package.extras]
docs = ["sphinx"]

[[package]]
name = "h11"
version = "0.12.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "h5py"
version = "3.7.0"
description = "Read and write HDF5 files from Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.14.5"

[[package]]
name = "httpcore"
version = "0.15.0"
description = "A minimal low-level HTTP client."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
anyio = ">=3.0.0,<4.0.0"
certifi = "*"
h11 = ">=0.11,<0.13"
sniffio = ">=1.0.0,<2.0.0"

[package.extras]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]

[[package]]
name = "httpx"
version = "0.23.0"
description = "The next generation HTTP client."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
certifi = "*"
httpcore = ">=0.15.0,<0.16.0"
rfc3986 = {version = ">=1.3,<2", extras = ["idna2008"]}
sniffio = "*"

[package.extras]
brotli = ["brotlicffi", "brotli"]
cli = ["click (>=8.0.0,<9.0.0)", "rich (>=10,<13)", "pygments (>=2.0.0,<3.0.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]

[[package]]
name = "httpx-oauth"
version = "0.7.0"
description = "Async OAuth client using HTTPX"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
httpx = ">=0.18,<0.24"

[package.extras]
dev = ["flake8", "pytest", "isort", "flake8-docstrings", "mkdocs", "mkdocs-material", "black", "mypy", "codecov", "pytest-cov", "pytest-mock", "flit", "markdown-include", "pygments", "pymdown-extensions", "bumpversion", "pytest-asyncio", "respx", "fastapi"]

[[package]]
name = "identify"
version = "2.5.1"
description = "File identification library for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imagecodecs"
version = "2022.2.22"
description = "Image transformation, compression, and decompression codecs"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.19.2"

[package.extras]
all = ["matplotlib (>=3.3)", "tifffile (>=2021.11.2)", "numcodecs"]

[[package]]
name = "imageio"
version = "2.19.3"
description = "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
pillow = ">=8.3.2"

[package.extras]
all-plugins = ["astropy", "av", "imageio-ffmpeg", "opencv-python", "psutil", "tifffile"]
all-plugins-pypy = ["av", "imageio-ffmpeg", "psutil", "tifffile"]
build = ["wheel"]
dev = ["invoke", "pytest", "pytest-cov", "fsspec", "black", "flake8"]
docs = ["sphinx", "numpydoc", "pydata-sphinx-theme"]
ffmpeg = ["imageio-ffmpeg", "psutil"]
fits = ["astropy"]
full = ["astropy", "av", "black", "flake8", "fsspec", "gdal", "imageio-ffmpeg", "invoke", "itk", "numpydoc", "opencv-python", "psutil", "pydata-sphinx-theme", "pytest", "pytest-cov", "sphinx", "tifffile", "wheel"]
gdal = ["gdal"]
itk = ["itk"]
linting = ["black", "flake8"]
opencv = ["opencv-python"]
pyav = ["av"]
test = ["invoke", "pytest", "pytest-cov", "fsspec"]
tifffile = ["tifffile"]

[[package]]
name = "importlib-metadata"
version = "4.12.0"
description = "Read metadata from Python packages"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.3)", "packaging", "pyfakefs", "flufl-flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "5.8.0"
description = "Read resources from Python packages"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "itsdangerous"
version = "2.1.2"
description = "Safely pass data to untrusted environments and back."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "lexid"
version = "2021.1006"
description = "Variable width build numbers with lexical ordering."
category = "dev"
optional = false
python-versions = ">=2.7"

[[package]]
name = "llvmlite"
version = "0.34.0"
description = "lightweight wrapper around basic LLVM functionality"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "locket"
version = "1.0.0"
description = "File-based locks for Python on Linux and Windows"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "lockfile"
version = "0.12.2"
description = "Platform-independent file locking module"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "makefun"
version = "1.13.1"
description = "Small library to dynamically create python functions."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "mako"
version = "1.2.1"
description = "A super-fast templating language that borrows the best ideas from the existing templating languages."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=0.9.2"

[package.extras]
babel = ["babel"]
lingua = ["lingua"]
testing = ["pytest"]

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "memory-profiler"
version = "0.60.0"
description = "A module for monitoring memory usage of a python program"
category = "dev"
optional = false
python-versions = ">=3.4"

[package.dependencies]
psutil = "*"

[[package]]
name = "multidict"
version = "6.0.2"
description = "multidict implementation"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "natsort"
version = "8.1.0"
description = "Simple yet flexible natural sorting in Python."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
fast = ["fastnumbers (>=2.0.0)"]
icu = ["PyICU (>=1.0.0)"]

[[package]]
name = "networkx"
version = "2.8.4"
description = "Python package for creating and manipulating graphs and networks"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.19)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["pre-commit (>=2.19)", "mypy (>=0.960)"]
doc = ["sphinx (>=5)", "pydata-sphinx-theme (>=0.9)", "sphinx-gallery (>=0.10)", "numpydoc (>=1.4)", "pillow (>=9.1)", "nb2plots (>=0.6)", "texext (>=0.6.6)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.9)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.1)", "pytest-cov (>=3.0)", "codecov (>=2.1)"]

[[package]]
name = "nodeenv"
version = "1.7.0"
description = "Node.js virtual environment builder"
category = "dev"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*"

[package.dependencies]
setuptools = "*"

[[package]]
name = "numba"
version = "0.51.2"
description = "compiling Python code using LLVM"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
llvmlite = ">=0.34.0.dev0,<0.35"
numpy = ">=1.15"
setuptools = "*"

[[package]]
name = "numcodecs"
version = "0.10.0"
description = "A Python package providing buffer compression and transformation codecs for use in data storage and communication applications."
category = "dev"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
numpy = ">=1.7"
typing-extensions = ">=3.7.4"

[package.extras]
msgpack = ["msgpack"]

[[package]]
name = "numpy"
version = "1.23.1"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "ome-zarr"
version = "0.5.2"
description = "Implementation of images in Zarr files."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiohttp = "<4"
dask = "*"
fsspec = {version = "!=2021.07.0", extras = ["s3"]}
numpy = "*"
requests = "*"
scikit-image = "*"
toolz = "*"
zarr = ">=2.8.1"

[[package]]
name = "opencv-python-headless"
version = "4.6.0.66"
description = "Wrapper package for OpenCV python bindings."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = [
    {version = ">=1.21.2", markers = "python_version >= \"3.10\" or python_version >= \"3.6\" and platform_system == \"Darwin\" and platform_machine == \"arm64\""},
    {version = ">=1.19.3", markers = "python_version >= \"3.6\" and platform_system == \"Linux\" and platform_machine == \"aarch64\" or python_version >= \"3.9\""},
    {version = ">=1.14.5", markers = "python_version >= \"3.7\""},
    {version = ">=1.17.3", markers = "python_version >= \"3.8\""},
]

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pandas"
version = "1.4.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = [
    {version = ">=1.18.5", markers = "platform_machine != \"aarch64\" and platform_machine != \"arm64\" and python_version < \"3.10\""},
    {version = ">=1.19.2", markers = "platform_machine == \"aarch64\" and python_version < \"3.10\""},
    {version = ">=1.20.0", markers = "platform_machine == \"arm64\" and python_version < \"3.10\""},
    {version = ">=1.21.0", markers = "python_version >= \"3.10\""},
]
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["hypothesis (>=5.5.3)", "pytest (>=6.0)", "pytest-xdist (>=1.31)"]

[[package]]
name = "paramiko"
version = "2.11.0"
description = "SSH2 protocol library"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
bcrypt = ">=3.1.3"
cryptography = ">=2.5"
pynacl = ">=1.0.1"
six = "*"

[package.extras]
all = ["pyasn1 (>=0.1.7)", "pynacl (>=1.0.1)", "bcrypt (>=3.1.3)", "invoke (>=1.3)", "gssapi (>=1.4.1)", "pywin32 (>=2.1.8)"]
ed25519 = ["pynacl (>=1.0.1)", "bcrypt (>=3.1.3)"]
gssapi = ["pyasn1 (>=0.1.7)", "gssapi (>=1.4.1)", "pywin32 (>=2.1.8)"]
invoke = ["invoke (>=1.3)"]

[[package]]
name = "parsl"
version = "1.2.1"
description = "Simple data dependent workflows in Python"
category = "dev"
optional = false
python-versions = ">=3.6.0"
develop = false

[package.dependencies]
dill = "*"
Flask = {version = ">=1.0.2", optional = true, markers = "extra == \"monitoring\""}
flask_sqlalchemy = {version = "*", optional = true, markers = "extra == \"monitoring\""}
globus-sdk = "*"
networkx = {version = "*", optional = true, markers = "extra == \"monitoring\""}
pandas = {version = ">=1.2", optional = true, markers = "extra == \"monitoring\""}
paramiko = "*"
plotly = {version = "*", optional = true, markers = "extra == \"monitoring\""}
psutil = ">=5.5.1"
pydot = {version = "*", optional = true, markers = "extra == \"monitoring\""}
python-daemon = {version = "*", optional = true, markers = "extra == \"monitoring\""}
pyzmq = ">=17.1.2"
requests = "*"
sqlalchemy = {version = ">=1.3.0", optional = true, markers = "extra == \"monitoring\""}
tblib = "*"
typeguard = ">=2.10"
typing-extensions = "*"

[package.extras]
all = ["sqlalchemy (>=1.3.0)", "pydot", "networkx", "Flask (>=1.0.2)", "flask-sqlalchemy", "pandas (>=1.2)", "plotly", "python-daemon", "boto3", "kubernetes", "oauth-ssh (>=0.9)", "mpi4py", "nbsphinx", "sphinx-rtd-theme", "ipython", "google-auth", "google-api-python-client", "python-gssapi", "azure (<=4)", "msrestazure", "work-queue", "pyyaml", "cffi", "jsonschema"]
aws = ["boto3"]
azure = ["azure (<=4)", "msrestazure"]
docs = ["nbsphinx", "sphinx-rtd-theme", "ipython"]
extreme_scale = ["mpi4py"]
flux = ["pyyaml", "cffi", "jsonschema"]
google_cloud = ["google-auth", "google-api-python-client"]
gssapi = ["python-gssapi"]
kubernetes = ["kubernetes"]
monitoring = ["sqlalchemy (>=1.3.0)", "pydot", "networkx", "Flask (>=1.0.2)", "flask-sqlalchemy", "pandas (>=1.2)", "plotly", "python-daemon"]
oauth_ssh = ["oauth-ssh (>=0.9)"]
workqueue = ["work-queue"]

[package.source]
type = "git"
url = "https://github.com/fractal-analytics-platform/parsl.git"
reference = "1.2.1-unofficial"
resolved_reference = "0cd9fc8490d9c17cfe0bd7f07d030c6c04141769"

[[package]]
name = "partd"
version = "1.2.0"
description = "Appendable key-value storage"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
locket = "*"
toolz = "*"

[package.extras]
complete = ["numpy (>=1.9.0)", "pandas (>=0.19.0)", "pyzmq", "blosc"]

[[package]]
name = "passlib"
version = "1.7.4"
description = "comprehensive password hashing framework supporting over 30 schemes"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
bcrypt = {version = ">=3.1.0", optional = true, markers = "extra == \"bcrypt\""}

[package.extras]
argon2 = ["argon2-cffi (>=18.2.0)"]
bcrypt = ["bcrypt (>=3.1.0)"]
build_docs = ["sphinx (>=1.6)", "sphinxcontrib-fulltoc (>=1.2.0)", "cloud-sptheme (>=1.10.1)"]
totp = ["cryptography"]

[[package]]
name = "pathlib2"
version = "2.3.7.post1"
description = "Object-oriented filesystem paths"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "pillow"
version = "9.2.0"
description = "Python Imaging Library (Fork)"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-issues (>=3.0.1)", "sphinx-removed-in", "sphinxext-opengraph"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "platformdirs"
version = "2.5.2"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2021.7.5b38)", "proselint (>=0.10.2)", "sphinx-autodoc-typehints (>=1.12)", "sphinx (>=4)"]
test = ["appdirs (==1.4.4)", "pytest-cov (>=2.7)", "pytest-mock (>=3.6)", "pytest (>=6)"]

[[package]]
name = "plotly"
version = "5.9.0"
description = "An open-source, interactive data visualization library for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
tenacity = ">=6.2.0"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "pre-commit"
version = "2.20.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
toml = "*"
virtualenv = ">=20.0.8"

[[package]]
name = "psutil"
version = "5.9.1"
description = "Cross-platform lib for process and system monitoring in Python."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["ipaddress", "mock", "enum34", "pywin32", "wmi"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydantic"
version = "1.9.1"
description = "Data validation and settings management using python type hints"
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
typing-extensions = ">=3.7.4.3"

[package.extras]
dotenv = ["python-dotenv (>=0.10.4)"]
email = ["email-validator (>=1.0.3)"]

[[package]]
name = "pydot"
version = "1.4.2"
description = "Python interface to Graphviz's Dot"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pyparsing = ">=2.1.4"

[[package]]
name = "pygments"
version = "2.12.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyjwt"
version = "2.4.0"
description = "JSON Web Token implementation in Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cryptography = {version = ">=3.3.1", optional = true, markers = "extra == \"crypto\""}

[package.extras]
crypto = ["cryptography (>=3.3.1)"]
dev = ["sphinx", "sphinx-rtd-theme", "zope-interface", "cryptography (>=3.3.1)", "pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)", "mypy", "pre-commit"]
docs = ["sphinx", "sphinx-rtd-theme", "zope-interface"]
tests = ["pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)"]

[[package]]
name = "pynacl"
version = "1.5.0"
description = "Python binding to the Networking and Cryptography (NaCl) library"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.4.1"

[package.extras]
docs = ["sphinx (>=1.6.5)", "sphinx-rtd-theme"]
tests = ["pytest (>=3.2.1,!=3.3.0)", "hypothesis (>=3.27.0)"]

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pytest"
version = "7.1.2"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
tomli = ">=1.0.0"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]

[[package]]
name = "pytest-asyncio"
version = "0.18.3"
description = "Pytest support for asyncio"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytest = ">=6.1.0"

[package.extras]
testing = ["coverage (==6.2)", "hypothesis (>=5.7.1)", "flaky (>=3.5.0)", "mypy (==0.931)", "pytest-trio (>=0.7.0)"]

[[package]]
name = "pytest-mock"
version = "3.8.2"
description = "Thin-wrapper around the mock package for easier use with pytest"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytest = ">=5.0"

[package.extras]
dev = ["pre-commit", "tox", "pytest-asyncio"]

[[package]]
name = "python-daemon"
version = "2.3.0"
description = "Library to implement a well-behaved Unix daemon process."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
docutils = "*"
lockfile = ">=0.10"
setuptools = "*"

[package.extras]
test = ["coverage", "docutils", "testscenarios (>=0.4)", "testtools"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-dotenv"
version = "0.20.0"
description = "Read key-value pairs from a .env file and set them as environment variables"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "python-multipart"
version = "0.0.5"
description = "A streaming multipart parser for Python"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.4.0"

[[package]]
name = "pytz"
version = "2022.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywavelets"
version = "1.3.0"
description = "PyWavelets, wavelet transform module"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17.3"

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyzmq"
version = "23.2.0"
description = "Python bindings for 0MQ"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = {version = "*", markers = "implementation_name == \"pypy\""}
py = {version = "*", markers = "implementation_name == \"pypy\""}

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
category = "dev"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "rfc3986"
version = "1.5.0"
description = "Validating URI References per RFC 3986"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
idna = {version = "*", optional = true, markers = "extra == \"idna2008\""}

[package.extras]
idna2008 = ["idna"]

[[package]]
name = "rich"
version = "12.5.1"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "main"
optional = false
python-versions = ">=3.6.3,<4.0.0"

[package.dependencies]
commonmark = ">=0.9.0,<0.10.0"
pygments = ">=2.6.0,<3.0.0"
typing-extensions = {version = ">=4.0.0,<5.0", markers = "python_version < \"3.9\""}

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<8.0.0)"]

[[package]]
name = "s3fs"
version = "2022.5.0"
description = "Convenient Filesystem interface over S3"
category = "dev"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
aiobotocore = ">=2.3.0,<2.4.0"
aiohttp = "<=4"
fsspec = "2022.5.0"

[package.extras]
awscli = ["aiobotocore[awscli] (>=2.3.0,<2.4.0)"]
boto3 = ["aiobotocore[boto3] (>=2.3.0,<2.4.0)"]

[[package]]
name = "scikit-image"
version = "0.19.3"
description = "Image processing in Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
imageio = ">=2.4.1"
networkx = ">=2.2"
numpy = ">=1.17.0"
packaging = ">=20.0"
pillow = ">=6.1.0,<7.1.0 || >7.1.0,<7.1.1 || >7.1.1,<8.3.0 || >8.3.0"
PyWavelets = ">=1.1.1"
scipy = ">=1.4.1"
tifffile = ">=2019.7.26"

[package.extras]
data = ["pooch (>=1.3.0)"]
docs = ["sphinx (>=1.8)", "sphinx-gallery (>=0.10.1)", "numpydoc (>=1.0)", "sphinx-copybutton", "pytest-runner", "scikit-learn", "matplotlib (>=3.3)", "dask[array] (>=0.15.0,!=2.17.0)", "cloudpickle (>=0.2.1)", "pandas (>=0.23.0)", "seaborn (>=0.7.1)", "pooch (>=1.3.0)", "tifffile (>=2020.5.30)", "myst-parser", "ipywidgets", "plotly (>=4.14.0)", "kaleido"]
optional = ["simpleitk", "astropy (>=3.1.2)", "cloudpickle (>=0.2.1)", "dask[array] (>=1.0.0,!=2.17.0)", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pyamg", "qtpy"]
test = ["asv", "codecov", "flake8", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pytest (>=5.2.0)", "pytest-cov (>=2.7.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scipy"
version = "1.6.1"
description = "SciPy: Scientific Library for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16.5"

[[package]]
name = "setuptools"
version = "63.2.0"
description = "Easily download, build, install, upgrade, and uninstall Python packages"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "jaraco.tidelift (>=1.4)", "pygments-github-lexers (==0.0.5)", "sphinx-favicon", "sphinx-inline-tabs", "sphinx-reredirects", "sphinxcontrib-towncrier", "furo"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-enabler (>=1.3)", "pytest-perf", "mock", "flake8-2020", "virtualenv (>=13.0.0)", "wheel", "pip (>=19.1)", "jaraco.envs (>=2.2)", "pytest-xdist", "jaraco.path (>=3.2.0)", "build", "filelock (>=3.4.0)", "pip-run (>=8.8)", "ini2toml[lite] (>=0.9)", "tomli-w (>=1.0.0)", "pytest-black (>=0.3.7)", "pytest-cov", "pytest-mypy (>=0.9.1)"]
testing-integration = ["pytest", "pytest-xdist", "pytest-enabler", "virtualenv (>=13.0.0)", "tomli", "wheel", "jaraco.path (>=3.2.0)", "jaraco.envs (>=2.2)", "build", "filelock (>=3.4.0)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "sniffio"
version = "1.2.0"
description = "Sniff out which async library your code is running under"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "sqlalchemy"
version = "1.4.35"
description = "Database Abstraction Library"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}

[package.extras]
aiomysql = ["greenlet (!=0.4.17)", "aiomysql"]
aiosqlite = ["typing_extensions (!=3.10.0.1)", "greenlet (!=0.4.17)", "aiosqlite"]
asyncio = ["greenlet (!=0.4.17)"]
asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3,!=0.2.4)"]
mariadb_connector = ["mariadb (>=1.0.1)"]
mssql = ["pyodbc"]
mssql_pymssql = ["pymssql"]
mssql_pyodbc = ["pyodbc"]
mypy = ["sqlalchemy2-stubs", "mypy (>=0.910)"]
mysql = ["mysqlclient (>=1.4.0,<2)", "mysqlclient (>=1.4.0)"]
mysql_connector = ["mysql-connector-python"]
oracle = ["cx_oracle (>=7,<8)", "cx_oracle (>=7)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql_asyncpg = ["greenlet (!=0.4.17)", "asyncpg"]
postgresql_pg8000 = ["pg8000 (>=1.16.6)"]
postgresql_psycopg2binary = ["psycopg2-binary"]
postgresql_psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql (<1)", "pymysql"]
sqlcipher = ["sqlcipher3-binary"]

[[package]]
name = "sqlalchemy2-stubs"
version = "0.0.2a24"
description = "Typing Stubs for SQLAlchemy 1.4"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=3.7.4"

[[package]]
name = "sqlmodel"
version = "0.0.6"
description = "SQLModel, SQL databases in Python, designed for simplicity, compatibility, and robustness."
category = "dev"
optional = false
python-versions = ">=3.6.1,<4.0.0"

[package.dependencies]
pydantic = ">=1.8.2,<2.0.0"
SQLAlchemy = ">=1.4.17,<1.5.0"
sqlalchemy2-stubs = "*"

[[package]]
name = "starlette"
version = "0.19.1"
description = "The little ASGI library that shines."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
anyio = ">=3.4.0,<5"
typing-extensions = {version = ">=3.10.0", markers = "python_version < \"3.10\""}

[package.extras]
full = ["itsdangerous", "jinja2", "python-multipart", "pyyaml", "requests"]

[[package]]
name = "tblib"
version = "1.7.0"
description = "Traceback serialization library."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "tenacity"
version = "8.0.1"
description = "Retry code until it succeeds"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
doc = ["reno", "sphinx", "tornado (>=4.5)"]

[[package]]
name = "tifffile"
version = "2022.5.4"
description = "Read and write TIFF files"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.19.2"

[package.extras]
all = ["imagecodecs (>=2021.11.20)", "matplotlib (>=3.3)", "lxml"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "dev"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "toolz"
version = "0.12.0"
description = "List processing tools and functional utilities"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "torch"
version = "1.12.0"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "dev"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
typing-extensions = "*"

[[package]]
name = "tqdm"
version = "4.64.0"
description = "Fast, Extensible Progress Meter"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "typeguard"
version = "2.13.3"
description = "Run-time type checker for Python"
category = "dev"
optional = false
python-versions = ">=3.5.3"

[package.extras]
doc = ["sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["pytest", "typing-extensions", "mypy"]

[[package]]
name = "typing-extensions"
version = "4.3.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.10"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "uvicorn"
version = "0.18.2"
description = "The lightning-fast ASGI server."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=7.0"
h11 = ">=0.8"

[package.extras]
standard = ["websockets (>=10.0)", "httptools (>=0.4.0)", "watchfiles (>=0.13)", "python-dotenv (>=0.13)", "PyYAML (>=5.1)", "uvloop (>=0.14.0,!=0.15.0,!=0.15.1)", "colorama (>=0.4)"]

[[package]]
name = "virtualenv"
version = "20.15.1"
description = "Virtual Python Environment builder"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
distlib = ">=0.3.1,<1"
filelock = ">=3.2,<4"
platformdirs = ">=2,<3"
six = ">=1.9.0,<2"

[package.extras]
docs = ["proselint (>=0.10.2)", "sphinx (>=3)", "sphinx-argparse (>=0.2.5)", "sphinx-rtd-theme (>=0.4.3)", "towncrier (>=21.3)"]
testing = ["coverage (>=4)", "coverage-enable-subprocess (>=1)", "flaky (>=3)", "pytest (>=4)", "pytest-env (>=0.6.2)", "pytest-freezegun (>=0.4.1)", "pytest-mock (>=2)", "pytest-randomly (>=1)", "pytest-timeout (>=1)", "packaging (>=20.0)"]

[[package]]
name = "werkzeug"
version = "2.1.2"
description = "The comprehensive WSGI web application library."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
watchdog = ["watchdog"]

[[package]]
name = "wrapt"
version = "1.14.1"
description = "Module for decorators, wrappers and monkey patching."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "yarl"
version = "1.7.2"
description = "Yet another URL library"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[[package]]
name = "zarr"
version = "2.12.0"
description = "An implementation of chunked, compressed, N-dimensional arrays for Python."
category = "dev"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
asciitree = "*"
fasteners = "*"
numcodecs = ">=0.6.4"
numpy = ">=1.7"

[package.extras]
jupyter = ["notebook", "ipytree"]

[[package]]
name = "zipp"
version = "3.8.1"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.3)", "jaraco-itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[metadata]
lock-version = "1.1"
python-versions = "^3.8"
content-hash = "9e64e6509aad8d9f1fda52ced023a3e67a9443c58dee60259178d0ff367a8659"

[metadata.files]
aiobotocore = []
aiohttp = []
aioitertools = []
aiosignal = []
aiosqlite = []
alembic = []
anndata = []
anyio = []
asciitree = []
asgi-lifespan = []
asttokens = []
async-timeout = []
asyncclick = []
atomicwrites = []
attrs = []
bcrypt = []
botocore = []
bumpver = []
cellpose = []
certifi = []
cffi = []
cfgv = []
charset-normalizer = []
click = []
cloudpickle = []
colorama = []
commonmark = []
coverage = []
cryptography = []
dask = []
defusedxml = []
devtools = []
dill = []
distlib = []
dnspython = []
docutils = []
email-validator = []
executing = []
fastapi = []
fastapi-users = []
fastapi-users-db-sqlmodel = []
fasteners = []
fastremap = []
filelock = []
flask = []
flask-sqlalchemy = []
frozenlist = []
fsspec = []
globus-sdk = []
graphviz = []
greenlet = []
h11 = []
h5py = []
httpcore = []
httpx = []
httpx-oauth = []
identify = []
idna = []
imagecodecs = []
imageio = []
importlib-metadata = []
importlib-resources = []
iniconfig = []
itsdangerous = []
jinja2 = []
jmespath = []
lexid = []
llvmlite = []
locket = []
lockfile = []
makefun = []
mako = []
markupsafe = []
memory-profiler = []
multidict = []
natsort = []
networkx = []
nodeenv = []
numba = []
numcodecs = []
numpy = []
ome-zarr = []
opencv-python-headless = []
packaging = []
pandas = []
paramiko = []
parsl = []
partd = []
passlib = []
pathlib2 = []
pillow = []
platformdirs = []
plotly = []
pluggy = []
pre-commit = []
psutil = []
py = []
pycparser = []
pydantic = []
pydot = []
pygments = []
pyjwt = []
pynacl = []
pyparsing = []
pytest = []
pytest-asyncio = []
pytest-mock = []
python-daemon = []
python-dateutil = []
python-dotenv = []
python-multipart = []
pytz = []
pywavelets = []
pyyaml = []
pyzmq = []
requests = []
rfc3986 = []
rich = []
s3fs = []
scikit-image = []
scipy = []
setuptools = []
six = []
sniffio = []
sqlalchemy = []
sqlalchemy2-stubs = []
sqlmodel = []
starlette = []
tblib = []
tenacity = []
tifffile = []
toml = []
tomli = []
toolz = []
torch = []
tqdm = []
typeguard = []
typing-extensions = []
urllib3 = []
uvicorn = []
virtualenv = []
werkzeug = []
wrapt = []
yarl = []
zarr = []
zipp = []
