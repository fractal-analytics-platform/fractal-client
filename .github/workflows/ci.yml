name: ci

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:

      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry==1.8.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --with dev --without docs --no-interaction

      - name: Test with pytest
        env:
          COVERAGE_FILE: "coverage-data-${{ matrix.python_version }}"
        run: poetry run coverage run -m pytest tests/test_unit_versions.py  # FIXME

      - run: ls -lah .  # FIXME

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: "coverage-data-*"

  coverage:
    name: Coverage
    runs-on: ubuntu-22.04
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: python -m pip install --upgrade coverage[toml]

      - name: Download data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Add coverage comment to Pull Requests
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MERGE_COVERAGE_FILES: true
          MINIMUM_GREEN: 90
          MINIMUM_ORANGE: 60
          ANNOTATE_MISSING_LINES: true
          ANNOTATION_TYPE: notice
